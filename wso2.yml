---
- hosts: wso2
  become: true

  vars:
    dirsrv_suffix: dc=sso,dc=local

    wso2is_admin: wso2admin
    wso2is_admin_password: asd
    wso2is_hostname: "{{ ansible_fqdn }}"
    wso2is_hostname_and_port: "{{ wso2is_hostname }}:9443"
    wso2is_ldap_url: "ldap://ldap1.sso.local:389" # TODO: ldaps
    wso2is_version: "5.7.0"
    wso2is_account: "cn=WSO2IS,ou=Services,{{ dirsrv_suffix }}"
    wso2is_account_password: "asd"
    wso2is_people_base: "ou=People,{{ dirsrv_suffix }}"
    wso2is_user_entry_object_class: "weeeOpenPerson"
    wso2is_user_dn_pattern: "uid={0},ou=People,{{ dirsrv_suffix }}"
    wso2is_groups_base: "ou=Groups,{{ dirsrv_suffix }}"
    wso2is_groups_dn_pattern: "uid={0},ou=Groups,{{ dirsrv_suffix }}"

  pre_tasks:
  - name: Set hosts file
    copy: src=hosts dest=/etc/hosts owner=root group=root

  tasks:
  - name: Install OpenJDK 8
    yum:
      name: java-1.8.0-openjdk-headless
      state: present
    become: true

  - name: Add WSO2 repo
    get_url:
      url: "https://bintray.com/wso2/rpm/rpm"
      dest: "/etc/yum.repos.d/bintray-wso2-rpm.repo"
      owner: root
      group: root
    become: true

  - name: Install WSO2 Identity Server
    yum:
      name: wso2is-{{ wso2is_version }}
      state: present
    become: true

  - name: Create WSO2 group
    group:
      name: wso2
      system: true
      gid: 802
    become: true

  - name: Add WSO2 user
    user:
      name: wso2
      group: wso2
      uid: 802
      shell: /sbin/nologin
    become: true

  # Created like this, but already included in this repo:
  # cd /usr/lib64/wso2/wso2is/5.7.0/repository/resources/security/
  # keytool -delete -keystore wso2carbon.jks -storepass wso2carbon -alias wso2carbon
  # keytool -genkeypair -keystore wso2carbon.jks -dname "CN=wso2.sso.local, OU=Whatever, O=Example, C=US" -keypass wso2carbon -storepass wso2carbon -keyalg RSA -alias wso2carbon
  # keytool -export -alias wso2carbon -file wso2carbon.cer -keystore wso2carbon.jks -storepass wso2carbon
  # ( these 2 should be handled by Ansible, maybe, possibly, if it works... )
  # ( keytool -delete -keystore client-truststore.jks -storepass wso2carbon -alias wso2carbon )
  # ( keytool -importcert -file wso2carbon.cer -keystore client-truststore.jks -storepass wso2carbon -alias wso2carbon )
  # keytool -importkeystore -srckeystore wso2carbon.jks -destkeystore wso2carbon.p12 -srcstoretype JKS -deststoretype PKCS12 -srcstorepass wso2carbon -deststorepass wso2carbon -srcalias wso2carbon -destalias wso2carbon -srckeypass wso2carbon
  #
  # And this, which you should replace with a certificate from a trusted CA (e.g. Let's Encrypt) or browsers will complain:
  # cd /usr/lib64/wso2/wso2is/5.7.0/repository/resources/security/
  # keytool -genkeypair -keystore tls.jks -dname "CN=wso2.sso.local, OU=TLS, O=Example, C=US" -keypass tlstlstls -storepass tlstlstls -keyalg RSA -alias tls
  # keytool -export -alias tls -file tls.cer -keystore tls.jks -storepass tlstlstls
  # keytool -importkeystore -srckeystore tls.jks -destkeystore tls.p12 -srcstoretype JKS -deststoretype PKCS12 -srckeypass tlstlstls -srcstorepass tlstlstls -deststorepass tlstlstls -srcalias tls -destalias tls
  #
  # May be useful for SAML configuration and stuff:
  # openssl x509 -in wso2carbon.cer -inform der -outform pem -out wso2carbon.pem
  #
  # It's recommended to use a different certificate for SAML and TLS stuff:
  # http://xacmlinfo.org/2015/09/01/configure-keystore-jks-files-in-wso2-products/
  # https://stackoverflow.com/q/43015273
  # And we're going to do just that.
  - name: Copy PKCS12 certificate + key to the server
    copy:
      src: wso2/{{ item }}
      dest: /usr/lib64/wso2/wso2is/{{ wso2is_version }}/repository/resources/security/
      owner: root
      group: wso2
      mode: 0640
      setype: cert_t
    become: true
    loop:
      - wso2carbon.p12
      - wso2carbon.cer
      - tls.p12
      - tls.cer

  - name: Check if default certificate is in keystore
    shell: keytool -list -v -keystore /usr/lib64/wso2/wso2is/{{ wso2is_version }}/repository/resources/security/wso2carbon.jks -storepass wso2carbon -keypass wso2carbon -alias wso2carbon | grep localhost
    become: true
    register: wso2is_keystore_grep
    failed_when: "'rc' not in wso2is_keystore_grep or wso2is_keystore_grep.rc|int > 1 or wso2is_keystore_grep.rc|int < 1"
    changed_when: false

  - name: Remove default keystore
    file:
      path: /usr/lib64/wso2/wso2is/{{ wso2is_version }}/repository/resources/security/wso2carbon.jks
      state: absent
    become: true
    when: wso2is_keystore_grep.rc|int == 0

  - name: Create wso2carbon keystore
    java_cert:
      pkcs12_path: /usr/lib64/wso2/wso2is/{{ wso2is_version }}/repository/resources/security/wso2carbon.p12
      cert_alias: wso2carbon
      keystore_path: /usr/lib64/wso2/wso2is/{{ wso2is_version }}/repository/resources/security/wso2carbon.jks
      keystore_pass: wso2carbon
      pkcs12_password: wso2carbon
      pkcs12_alias: wso2carbon
      keystore_create: yes
      state: present
    become: true
    notify: restart WSO2IS

  - name: Create TLS keystore
    java_cert:
      pkcs12_path: /usr/lib64/wso2/wso2is/{{ wso2is_version }}/repository/resources/security/tls.p12
      cert_alias: tls
      keystore_path: /usr/lib64/wso2/wso2is/{{ wso2is_version }}/repository/resources/security/tls.jks
      keystore_pass: tlstlstls
      pkcs12_password: tlstlstls
      pkcs12_alias: tls
      keystore_create: yes
      state: present
    become: true
    notify: restart WSO2IS

  # The java_cert module was doing absolutely nothing: doesn't change the certificate if it changed, doesn't add the certificates, does nothing.
  # It just stands there, gazes into the keystore and then concludes "yep, there's a keystore with that name. Nothing to do here!"
  - name: Un-trust our certificates
    command: keytool -delete -keystore /usr/lib64/wso2/wso2is/{{ wso2is_version }}/repository/resources/security/client-truststore.jks -storepass wso2carbon -alias {{ item }}
    changed_when: false
    become: true
    register: wso2is_keytool_result
    # "keytool error: java.lang.Exception: Alias <tls> does not exist"
    failed_when: "wso2is_keytool_result.rc|int != 0 and not wso2is_keytool_result.stdout.startswith('keytool error: java.lang.Exception: Alias ')"
    loop:
      - wso2carbon
      - tls

  - name: Trust our certificates
    command: keytool -importcert -noprompt -keystore /usr/lib64/wso2/wso2is/{{ wso2is_version }}/repository/resources/security/client-truststore.jks -file /usr/lib64/wso2/wso2is/{{ wso2is_version }}/repository/resources/security/{{ item }}.cer -storepass wso2carbon -alias {{ item }}
    become: true
    changed_when: false
    loop:
      - wso2carbon
      - tls

  - name: Change keystore permissions
    file:
      path: /usr/lib64/wso2/wso2is/{{ wso2is_version }}/repository/resources/security/{{ item }}
      state: file
      owner: root
      group: wso2
      mode: 0640
      setype: cert_t
    become: true
    loop:
      - wso2carbon.jks
      - tls.jks

  # TODO: this overrides root:wso2 files
  - name: Change the owner of WSO2 directory
    file:
      path: /usr/lib64/wso2/wso2is/{{ wso2is_version }}
      state: directory
      recurse: true
      owner: wso2
      group: wso2
    become: true

  - name: Deploy user-mgt.xml
    template:
      src: wso2/user-mgt.xml.j2
      dest: /usr/lib64/wso2/wso2is/{{ wso2is_version }}/repository/conf/user-mgt.xml
      owner: wso2
      group: wso2
      mode: 0440
    become: true
    notify: restart WSO2IS

  - name: Deploy carbon.xml
    template:
      src: wso2/carbon.xml.j2
      dest: /usr/lib64/wso2/wso2is/{{ wso2is_version }}/repository/conf/carbon.xml
      owner: wso2
      group: wso2
      mode: 0440
    become: true
    notify: restart WSO2IS

  - name: Deploy catalina-server.xml
    template:
      src: wso2/catalina-server.xml.j2
      dest: /usr/lib64/wso2/wso2is/{{ wso2is_version }}/repository/conf/tomcat/catalina-server.xml
      owner: wso2
      group: wso2
      mode: 0440
    become: true
    notify: restart WSO2IS

  # https://github.com/wso2/carbon-identity-framework/pull/2008
  - name: Deploy application-authentication.xml
    template:
      src: wso2/application-authentication.xml.j2
      dest: "{{ item }}"
      owner: wso2
      group: wso2
      mode: 0440
    become: true
    notify: restart WSO2IS
    loop:
    - /usr/lib64/wso2/wso2is/{{ wso2is_version }}/repository/conf/identity/application-authentication.xml
    - /usr/lib64/wso2/wso2is/{{ wso2is_version }}/repository/components/features/org.wso2.carbon.identity.application.authentication.framework.server_5.12.153/

  - name: Disable embedded LDAP
    copy:
      src: wso2/embedded-ldap.xml
      dest: "/usr/lib64/wso2/wso2is/{{ wso2is_version }}/repository/conf/identity/embedded-ldap.xml"
      owner: wso2
      group: wso2
      mode: 0440
    become: true
    notify: restart WSO2IS

  - name: Copy WSO2IS service file
    template:
      src: "wso2/wso2is.service.j2"
      dest: /etc/systemd/system/wso2is.service
    become: true
    notify:
      - systemctl daemon-reload
      - restart WSO2IS

  - name: "Start wso2-is as a service"
    service:
      name: wso2is
      state: started
      enabled: true
    become: true

  handlers:
  - name: systemctl daemon-reload
    command: systemctl daemon-reload
    become: true

  - name: restart WSO2IS
    service:
      name: wso2is
      state: restarted
    become: true
